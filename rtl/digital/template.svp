/* *****************************************************************************
 * File: template.vp
 * Author: Ofer Shacham
 * 
 * Description:
 * This module is the top of the actual design.
 * 
 * REQUIRED GENESIS PARAMETERS:
 * ----------------------------
 * * IOList -  List of main design IOs. For each IO you must specify:
 *   * name
 *   * width
 *   * direction - allowed directions are 'in'/'out'
 *   * bsr - put IO on boundary scan? (yes/no)
 *   * pad - pad type (analog or anl/digital or dig)
 *   * orientation - Orientation of the IO pad. allowed values are {left, right, 
 *		     top, bottom}
 * 
 * SYSCLK_CFG_BUS_WIDTH (48) -  Bus width for system clocked configuration entities
 * SYSCLK_CFG_ADDR_WIDTH (18) - Address width for system clocked configuration entities
 * TESTCLK_CFG_BUS_WIDTH (32) - Bus width for test clocked configuration entities
 * TESTCLK_CFG_ADDR_WIDTH (12) - Address width for test clocked configuration entities
 * 
 * ds
 * Inputs:
 * -------
 * Main design inputs, plus  
 * inputs that regard the boundary scan and pads control
 * 
 * Outputs:
 * --------
 * Main design outputs, plus 
 * outputs that regard the boundary scan and pads control
 * 
 * Change bar:
 * -----------
 * Date          Author   Description
 * Mar 28, 2010  shacham  init version  --  
 * May 18, 2010  shacham  Added orientation feild to IO parameter list
 * May 24, 2010  shacham  Pulled config bus parameters to top level
 *			  Added cfg_ifc as the proper way to implement config
 *			  bus uniformity amongst modules.
 *			  Made declaration of IO params into a force_param to
 *			  make it immutable
 * ****************************************************************************/
// ACTUAL GENESIS2 PARAMETERIZATIONS
//; my $io_list = parameter(Name=>'IOList', Val=> 
//;		[	
//;		# Digital IOs
//;			# Some random signals for illustration. (connected to the reg file for no good reason)
//;			 {name => 'en_v2t', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_pi_arb', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_ext_pi_ctl_cdr', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'ext_pi_ctl_cdr', bitwidth => 9, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_ext_pi_ctl_offset', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'ext_pi_ctl_offset', bitwidth => 9, array=>4,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_ext_v2t_ctl', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'ext_v2t_ctl', bitwidth => 4, array=>16,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_ext_mismatch_ctl', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'ext_mismatch_ctl', bitwidth => 32, array=>4,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_ext_pfd_offset', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'ext_pfd_offset', bitwidth => 8, array=>16,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_skew_cal', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_v2t_cal', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_mismatch_cal', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_pfd_cal', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'Navg_adc', bitwidth => 4, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'Nbin_adc', bitwidth => 4, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'DZ_hist_adc', bitwidth => 4, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'DZ_v2t_cal', bitwidth => 3, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'init', bitwidth => 2, array=>16,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'en_mdll', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'adcout', bitwidth => 8, array=>16,  direction => 'in',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'adcout_avg', bitwidth => 8, array=>16,  direction => 'in',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'adcout_sum', bitwidth => 24, array=>16,  direction => 'in',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'adcout_hist_center', bitwidth => 16, array=>16,  direction => 'in',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'adcout_hist_side', bitwidth => 16, array=>16,  direction => 'in',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'adcout_pfd_offset', bitwidth => 8, array=>16,  direction => 'in',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'sel_ext_pi', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'pi_ctl_ext', bitwidth => 9, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'sel_ext_pd_offset', bitwidth => 1, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'pd_offset_ext', bitwidth => 8, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'in_addr', bitwidth => 10, array=>1,  direction => 'out',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'out_data', bitwidth => 8, array=>16,  direction => 'in',  bsr => 'yes', orientation => 'top'},
//;			 {name => 'addr', bitwidth => 10, array=>1,  direction => 'in',  bsr => 'yes', orientation => 'top'},
//;							     				       
//;		# Digital, non-design specific IOs	     				       
//;			{name => 'tck',		bitwidth => 1,  direction => 'in',  bsr => 'no',  pad => 'digital', orientation => 'right'},
//;			{name => 'trst_n',	bitwidth => 1,  direction => 'in',  bsr => 'no',  pad => 'digital', orientation => 'right'},
//;			{name => 'tms',		bitwidth => 1,  direction => 'in',  bsr => 'no',  pad => 'digital', orientation => 'right'},
//;			{name => 'tdi',		bitwidth => 1,  direction => 'in',  bsr => 'no',  pad => 'digital', orientation => 'right'},
//;			{name => 'tdo',		bitwidth => 1,  direction => 'out', bsr => 'no',  pad => 'digital', orientation => 'right'},
//;			{name => 'tdo_en',	bitwidth => 1,  direction => 'out', bsr => 'no',  pad => 'digital', orientation => 'right'}
//;		], 
//;		Doc=>"List of all IOs of the chip with meta information about 'width', 'direction' (in/out), 'bsr' which is boundry scan register (yes/no), ".
//; 		     " 'pad' (digital/analog), and 'orientation' (top/bottom/left/right)",
//;             Force=>1 );
//; my $num_ios = scalar(@{$io_list});
//;
//;# Verify correctness of IO parameters:
//; my $cnt = 0;
//; foreach my $io (@{$io_list}){
//;   $self->error("IO $cnt is missing it's name!") 
//;	unless defined $io->{name};
//;   $self->error("IO $io->{name} (IO\# $cnt) is missing its width!") 
//;	unless defined $io->{bitwidth};
//;   $self->error("IO $io->{name} (IO\# $cnt) has an illegal width -->$io->{bitwidth}<--!") 
//;	if ($io->{bitwidth} < 1);
//;   $self->error("IO $io->{name} (IO\# $cnt) is missing its direction!") 
//;	unless defined $io->{direction};
//;   $self->error("IO $io->{name} (IO\# $cnt) has an invalid direction -->$io->{direction}<--! ".
//;		   "(allowed values: in/out)") 
//;	unless ($io->{direction} =~ m/^(in|out)$/i);
//;   $self->error("IO $io->{name} (IO\# $cnt) does not specify whether it's on the boundary scan!") 
//;	unless defined $io->{bsr};
//;   $self->error("IO $io->{name} (IO\# $cnt) has an invalid bsr flag -->$io->{bsr}<--! ".
//;		   "(allowed values: yes/no)") 
//;	unless ($io->{bsr} =~ m/^(yes|no)$/i);
//;   $cnt++;
//; } # end of "foreach my $io..."
//;
//;
//; # First we create an interface for this chip
//; my $ifc = generate('template_ifc', 'ifc', IOList => $io_list);
//;
//; # this would enable others to use this interface
//; parameter(Name=>'IfcPtr', Val=>$ifc, force=>1, Doc=>"Declaring our interface object for others to use");
//;
//;  
//; # Now, let's decide upon the parameters of the two configuration buses:
//; my $sc_cfg_bus_width = $self->define_param(SYSCLK_CFG_BUS_WIDTH => 32);
//; my $sc_cfg_addr_width =  $self->define_param(SYSCLK_CFG_ADDR_WIDTH => 13);
//; my $tc_cfg_bus_width =  $self->define_param(TESTCLK_CFG_BUS_WIDTH => 32);
//; my $tc_cfg_addr_width =  $self->define_param(TESTCLK_CFG_ADDR_WIDTH => 12);


module `mname`
  (
   // main IOs
   `$ifc->mname`.des ifc,

   // Signals for the Boundary Scan Register (these are not chip IOs though)
   output wire logic bsr_tdi,
   output wire logic bsr_sample,
   output wire logic	bsr_intest,
   output wire logic bsr_extest,
   output wire logic bsr_update_en,
   output wire logic bsr_capture_en,
   output wire logic bsr_shift_dr,
   input wire logic	bsr_tdo
   );


// Register Bank 1 and Interface Mapping
// Register Bank 2 and Interface Mapping
// Register Bank 3 and Interface Mapping
// Register Bank 4 and Interface Mapping
// Register Bank 5 and Interface Mapping
// Register Bank 6 and Interface Mapping
// Register Bank 7 and Interface Mapping
// Register Bank 8 and Interface Mapping
// Register Bank 9 and Interface Mapping
// Register Bank 10 and Interface Mapping
// Register Bank 11 and Interface Mapping
// Register Bank 12 and Interface Mapping


   //  Config interfaces for system and test clock domains
//; my $sc_jtag2rf0_ifc = generate('cfg_ifc', 'sc_jtag2rf0_ifc',
//;				DataWidth => $sc_cfg_bus_width,
//;				AddrWidth => $sc_cfg_addr_width);
//; my $sc_rf02rf1_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf02rf1_ifc');
//; my $sc_rf12rf2_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf12rf2_ifc');
//; my $sc_rf22rf3_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf22rf3_ifc');
//; my $sc_rf32rf4_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf32rf4_ifc');
//; my $sc_rf42rf5_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf42rf5_ifc');
//; my $sc_rf52rf6_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf52rf6_ifc');
//; my $sc_rf62rf7_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf62rf7_ifc');
//; my $sc_rf72rf8_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf72rf8_ifc');
//; my $sc_rf82rf9_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf82rf9_ifc');
//; my $sc_rf92rf10_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf92rf10_ifc');
//; my $sc_rf102rf11_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf102rf11_ifc');
//; my $sc_rf122jtag_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf122jtag_ifc');
//; my $sc_rf112rf12_ifc = clone($sc_jtag2rf0_ifc, 'sc_rf112rf2_ifc');

`$sc_jtag2rf0_ifc->instantiate`();
`$sc_rf02rf1_ifc->instantiate`();
`$sc_rf12rf2_ifc->instantiate`();
`$sc_rf22rf3_ifc->instantiate`();
`$sc_rf32rf4_ifc->instantiate`();
`$sc_rf42rf5_ifc->instantiate`();
`$sc_rf52rf6_ifc->instantiate`();
`$sc_rf62rf7_ifc->instantiate`();
`$sc_rf72rf8_ifc->instantiate`();
`$sc_rf82rf9_ifc->instantiate`();
`$sc_rf92rf10_ifc->instantiate`();
`$sc_rf102rf11_ifc->instantiate`();
`$sc_rf122jtag_ifc->instantiate`();
`$sc_rf112rf12_ifc->instantiate`();

//; my $tc_jtag2jtag_ifc = generate('cfg_ifc', 'tc_jtag2jtag_ifc',
//;				DataWidth => $tc_cfg_bus_width,
//;				AddrWidth => $tc_cfg_addr_width);

`$tc_jtag2jtag_ifc->instantiate`();


   // Reset to the test clock domain (this is different than the trst signal)
   logic 				test_logic_reset;


   //;
   //;
   //;
   //; # Create the JTAG to reg-files controller object
//; my $cfg_dbg = generate('cfg_and_dbg', 'cfg_and_dbg',
//;			SC_CFG_BUS => 'yes', SC_CFG_IFC_REF => $sc_jtag2rf0_ifc,
//;			TC_CFG_BUS => 'yes', TC_CFG_IFC_REF => $tc_jtag2jtag_ifc);
   //;

   // Instantiate the JTAG to reg-files controller
   `$cfg_dbg->instantiate`
     (
      // JTAG signals
      .tms(ifc.tms),
      .tck(ifc.tck),
      .trst_n(ifc.trst_n),
      .tdi(ifc.tdi),
      .tdo(ifc.tdo),
      .tdo_en(ifc.tdo_en),

      // BSR interface
      .bsr_extest(bsr_extest),
      .bsr_intest(bsr_intest),
      .bsr_sample(bsr_sample),
      .bsr_capture_en(bsr_capture_en),
      .bsr_shift_dr(bsr_shift_dr),
      .bsr_update_en(bsr_update_en),
      .bsr_tdo(bsr_tdo),
      .bsr_tdi(bsr_tdi),

      // signals to the system clocked regfile
			.sc_cfgReq(`$sc_jtag2rf0_ifc->iname`.cfgOut),
			.sc_cfgRep(`$sc_rf122jtag_ifc->iname`.cfgIn),

      .Clk(ifc.Clk),
      .Reset(ifc.Reset),

      // signals to the jtag clocked regfile
			.tc_cfgReq(`$tc_jtag2jtag_ifc->iname`.cfgOut),
			.tc_cfgRep(`$tc_jtag2jtag_ifc->iname`.cfgIn),

      .test_logic_reset(test_logic_reset)
      );


   // Instantiate a couple of SYSTEM CLOCK domain reg-files and concatenate them
   // Note that signals A and B are IO's to the system. We'll also define signal C here:
   //; my $sc_cfg_ops = $cfg_dbg->get_param('SC_CFG_OPCODES');
//Register Bank 0:
//;my $regfile0_on_sysclk = generate('reg_file', 'regfile0_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0x100,
//;			RegList =>[
//;					{Name => 'en_v2t', Width=>1, IEO=>'o'},
//;					{Name => 'en_pi_arb', Width=>1, IEO=>'o'},
//;					{Name => 'en_ext_pi_ctl_cdr', Width=>1, IEO=>'o'},
//;					{Name => 'ext_pi_ctl_cdr', Width=>9, IEO=>'o'},
//;					{Name => 'en_ext_pi_ctl_offset', Width=>1, IEO=>'o'},
//;					{Name => 'en_ext_v2t_ctl', Width=>1, IEO=>'o'},
//;					{Name => 'en_ext_mismatch_ctl', Width=>1, IEO=>'o'},
//;					{Name => 'en_ext_pfd_offset', Width=>1, IEO=>'o'},
//;					{Name => 'en_skew_cal', Width=>1, IEO=>'o'},
//;					{Name => 'en_v2t_cal', Width=>1, IEO=>'o'},
//;					{Name => 'en_mismatch_cal', Width=>1, IEO=>'o'},
//;					{Name => 'en_pfd_cal', Width=>1, IEO=>'o'},
//;					{Name => 'Navg_adc', Width=>4, IEO=>'o'},
//;					{Name => 'Nbin_adc', Width=>4, IEO=>'o'},
//;					{Name => 'DZ_hist_adc', Width=>4, IEO=>'o'},
//;					{Name => 'DZ_v2t_cal', Width=>3, IEO=>'o'},
//;					{Name => 'en_mdll', Width=>1, IEO=>'o'},
//;					{Name => 'sel_ext_pi', Width=>1, IEO=>'o'},
//;					{Name => 'pi_ctl_ext', Width=>9, IEO=>'o'},
//;					{Name => 'sel_ext_pd_offset', Width=>1, IEO=>'o'},
//;					{Name => 'pd_offset_ext', Width=>8, IEO=>'o'},
//;					{Name => 'in_addr', Width=>10, IEO=>'o'},
//;					{Name => 'addr', Width=>10, IEO=>'i'}
//;				]
//;			);
`$regfile0_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_jtag2rf0_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf02rf1_ifc->iname`.cfgOut),
			.en_v2t_q(ifc.en_v2t),
			.en_pi_arb_q(ifc.en_pi_arb),
			.en_ext_pi_ctl_cdr_q(ifc.en_ext_pi_ctl_cdr),
			.ext_pi_ctl_cdr_q(ifc.ext_pi_ctl_cdr),
			.en_ext_pi_ctl_offset_q(ifc.en_ext_pi_ctl_offset),
			.en_ext_v2t_ctl_q(ifc.en_ext_v2t_ctl),
			.en_ext_mismatch_ctl_q(ifc.en_ext_mismatch_ctl),
			.en_ext_pfd_offset_q(ifc.en_ext_pfd_offset),
			.en_skew_cal_q(ifc.en_skew_cal),
			.en_v2t_cal_q(ifc.en_v2t_cal),
			.en_mismatch_cal_q(ifc.en_mismatch_cal),
			.en_pfd_cal_q(ifc.en_pfd_cal),
			.Navg_adc_q(ifc.Navg_adc),
			.Nbin_adc_q(ifc.Nbin_adc),
			.DZ_hist_adc_q(ifc.DZ_hist_adc),
			.DZ_v2t_cal_q(ifc.DZ_v2t_cal),
			.en_mdll_q(ifc.en_mdll),
			.sel_ext_pi_q(ifc.sel_ext_pi),
			.pi_ctl_ext_q(ifc.pi_ctl_ext),
			.sel_ext_pd_offset_q(ifc.sel_ext_pd_offset),
			.pd_offset_ext_q(ifc.pd_offset_ext),
			.in_addr_q(ifc.in_addr),
			.addr_d(ifc.addr)
			);
//Register Bank 1:
//;my $regfile1_on_sysclk = generate('reg_file', 'regfile1_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0x200,
//;			RegList =>[
//;					{Name => 'ext_pi_ctl_offset_0', Width=>9, IEO=>'o'},
//;					{Name => 'ext_pi_ctl_offset_1', Width=>9, IEO=>'o'},
//;					{Name => 'ext_pi_ctl_offset_2', Width=>9, IEO=>'o'},
//;					{Name => 'ext_pi_ctl_offset_3', Width=>9, IEO=>'o'}
//;				]
//;			);
`$regfile1_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf02rf1_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf12rf2_ifc->iname`.cfgOut),
			.ext_pi_ctl_offset_0_q(ifc.ext_pi_ctl_offset[0]),
			.ext_pi_ctl_offset_1_q(ifc.ext_pi_ctl_offset[1]),
			.ext_pi_ctl_offset_2_q(ifc.ext_pi_ctl_offset[2]),
			.ext_pi_ctl_offset_3_q(ifc.ext_pi_ctl_offset[3])
			);
//Register Bank 2:
//;my $regfile2_on_sysclk = generate('reg_file', 'regfile2_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0x300,
//;			RegList =>[
//;					{Name => 'ext_v2t_ctl_0', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_1', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_2', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_3', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_4', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_5', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_6', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_7', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_8', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_9', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_10', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_11', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_12', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_13', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_14', Width=>4, IEO=>'o'},
//;					{Name => 'ext_v2t_ctl_15', Width=>4, IEO=>'o'}
//;				]
//;			);
`$regfile2_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf12rf2_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf22rf3_ifc->iname`.cfgOut),
			.ext_v2t_ctl_0_q(ifc.ext_v2t_ctl[0]),
			.ext_v2t_ctl_1_q(ifc.ext_v2t_ctl[1]),
			.ext_v2t_ctl_2_q(ifc.ext_v2t_ctl[2]),
			.ext_v2t_ctl_3_q(ifc.ext_v2t_ctl[3]),
			.ext_v2t_ctl_4_q(ifc.ext_v2t_ctl[4]),
			.ext_v2t_ctl_5_q(ifc.ext_v2t_ctl[5]),
			.ext_v2t_ctl_6_q(ifc.ext_v2t_ctl[6]),
			.ext_v2t_ctl_7_q(ifc.ext_v2t_ctl[7]),
			.ext_v2t_ctl_8_q(ifc.ext_v2t_ctl[8]),
			.ext_v2t_ctl_9_q(ifc.ext_v2t_ctl[9]),
			.ext_v2t_ctl_10_q(ifc.ext_v2t_ctl[10]),
			.ext_v2t_ctl_11_q(ifc.ext_v2t_ctl[11]),
			.ext_v2t_ctl_12_q(ifc.ext_v2t_ctl[12]),
			.ext_v2t_ctl_13_q(ifc.ext_v2t_ctl[13]),
			.ext_v2t_ctl_14_q(ifc.ext_v2t_ctl[14]),
			.ext_v2t_ctl_15_q(ifc.ext_v2t_ctl[15])
			);
//Register Bank 3:
//;my $regfile3_on_sysclk = generate('reg_file', 'regfile3_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0x400,
//;			RegList =>[
//;					{Name => 'ext_mismatch_ctl_0', Width=>32, IEO=>'o'},
//;					{Name => 'ext_mismatch_ctl_1', Width=>32, IEO=>'o'},
//;					{Name => 'ext_mismatch_ctl_2', Width=>32, IEO=>'o'},
//;					{Name => 'ext_mismatch_ctl_3', Width=>32, IEO=>'o'}
//;				]
//;			);
`$regfile3_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf22rf3_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf32rf4_ifc->iname`.cfgOut),
			.ext_mismatch_ctl_0_q(ifc.ext_mismatch_ctl[0]),
			.ext_mismatch_ctl_1_q(ifc.ext_mismatch_ctl[1]),
			.ext_mismatch_ctl_2_q(ifc.ext_mismatch_ctl[2]),
			.ext_mismatch_ctl_3_q(ifc.ext_mismatch_ctl[3])
			);
//Register Bank 4:
//;my $regfile4_on_sysclk = generate('reg_file', 'regfile4_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0x500,
//;			RegList =>[
//;					{Name => 'ext_pfd_offset_0', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_1', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_2', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_3', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_4', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_5', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_6', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_7', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_8', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_9', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_10', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_11', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_12', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_13', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_14', Width=>8, IEO=>'o'},
//;					{Name => 'ext_pfd_offset_15', Width=>8, IEO=>'o'}
//;				]
//;			);
`$regfile4_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf32rf4_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf42rf5_ifc->iname`.cfgOut),
			.ext_pfd_offset_0_q(ifc.ext_pfd_offset[0]),
			.ext_pfd_offset_1_q(ifc.ext_pfd_offset[1]),
			.ext_pfd_offset_2_q(ifc.ext_pfd_offset[2]),
			.ext_pfd_offset_3_q(ifc.ext_pfd_offset[3]),
			.ext_pfd_offset_4_q(ifc.ext_pfd_offset[4]),
			.ext_pfd_offset_5_q(ifc.ext_pfd_offset[5]),
			.ext_pfd_offset_6_q(ifc.ext_pfd_offset[6]),
			.ext_pfd_offset_7_q(ifc.ext_pfd_offset[7]),
			.ext_pfd_offset_8_q(ifc.ext_pfd_offset[8]),
			.ext_pfd_offset_9_q(ifc.ext_pfd_offset[9]),
			.ext_pfd_offset_10_q(ifc.ext_pfd_offset[10]),
			.ext_pfd_offset_11_q(ifc.ext_pfd_offset[11]),
			.ext_pfd_offset_12_q(ifc.ext_pfd_offset[12]),
			.ext_pfd_offset_13_q(ifc.ext_pfd_offset[13]),
			.ext_pfd_offset_14_q(ifc.ext_pfd_offset[14]),
			.ext_pfd_offset_15_q(ifc.ext_pfd_offset[15])
			);
//Register Bank 5:
//;my $regfile5_on_sysclk = generate('reg_file', 'regfile5_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0x600,
//;			RegList =>[
//;					{Name => 'init_0', Width=>2, IEO=>'o'},
//;					{Name => 'init_1', Width=>2, IEO=>'o'},
//;					{Name => 'init_2', Width=>2, IEO=>'o'},
//;					{Name => 'init_3', Width=>2, IEO=>'o'},
//;					{Name => 'init_4', Width=>2, IEO=>'o'},
//;					{Name => 'init_5', Width=>2, IEO=>'o'},
//;					{Name => 'init_6', Width=>2, IEO=>'o'},
//;					{Name => 'init_7', Width=>2, IEO=>'o'},
//;					{Name => 'init_8', Width=>2, IEO=>'o'},
//;					{Name => 'init_9', Width=>2, IEO=>'o'},
//;					{Name => 'init_10', Width=>2, IEO=>'o'},
//;					{Name => 'init_11', Width=>2, IEO=>'o'},
//;					{Name => 'init_12', Width=>2, IEO=>'o'},
//;					{Name => 'init_13', Width=>2, IEO=>'o'},
//;					{Name => 'init_14', Width=>2, IEO=>'o'},
//;					{Name => 'init_15', Width=>2, IEO=>'o'}
//;				]
//;			);
`$regfile5_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf42rf5_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf52rf6_ifc->iname`.cfgOut),
			.init_0_q(ifc.init[0]),
			.init_1_q(ifc.init[1]),
			.init_2_q(ifc.init[2]),
			.init_3_q(ifc.init[3]),
			.init_4_q(ifc.init[4]),
			.init_5_q(ifc.init[5]),
			.init_6_q(ifc.init[6]),
			.init_7_q(ifc.init[7]),
			.init_8_q(ifc.init[8]),
			.init_9_q(ifc.init[9]),
			.init_10_q(ifc.init[10]),
			.init_11_q(ifc.init[11]),
			.init_12_q(ifc.init[12]),
			.init_13_q(ifc.init[13]),
			.init_14_q(ifc.init[14]),
			.init_15_q(ifc.init[15])
			);
//Register Bank 6:
//;my $regfile6_on_sysclk = generate('reg_file', 'regfile6_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0x700,
//;			RegList =>[
//;					{Name => 'adcout_0', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_1', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_2', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_3', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_4', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_5', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_6', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_7', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_8', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_9', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_10', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_11', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_12', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_13', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_14', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_15', Width=>8, IEO=>'i'}
//;				]
//;			);
`$regfile6_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf52rf6_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf62rf7_ifc->iname`.cfgOut),
			.adcout_0_d(ifc.adcout[0]),
			.adcout_1_d(ifc.adcout[1]),
			.adcout_2_d(ifc.adcout[2]),
			.adcout_3_d(ifc.adcout[3]),
			.adcout_4_d(ifc.adcout[4]),
			.adcout_5_d(ifc.adcout[5]),
			.adcout_6_d(ifc.adcout[6]),
			.adcout_7_d(ifc.adcout[7]),
			.adcout_8_d(ifc.adcout[8]),
			.adcout_9_d(ifc.adcout[9]),
			.adcout_10_d(ifc.adcout[10]),
			.adcout_11_d(ifc.adcout[11]),
			.adcout_12_d(ifc.adcout[12]),
			.adcout_13_d(ifc.adcout[13]),
			.adcout_14_d(ifc.adcout[14]),
			.adcout_15_d(ifc.adcout[15])
			);
//Register Bank 7:
//;my $regfile7_on_sysclk = generate('reg_file', 'regfile7_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0x800,
//;			RegList =>[
//;					{Name => 'adcout_avg_0', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_1', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_2', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_3', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_4', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_5', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_6', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_7', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_8', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_9', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_10', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_11', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_12', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_13', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_14', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_avg_15', Width=>8, IEO=>'i'}
//;				]
//;			);
`$regfile7_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf62rf7_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf72rf8_ifc->iname`.cfgOut),
			.adcout_avg_0_d(ifc.adcout_avg[0]),
			.adcout_avg_1_d(ifc.adcout_avg[1]),
			.adcout_avg_2_d(ifc.adcout_avg[2]),
			.adcout_avg_3_d(ifc.adcout_avg[3]),
			.adcout_avg_4_d(ifc.adcout_avg[4]),
			.adcout_avg_5_d(ifc.adcout_avg[5]),
			.adcout_avg_6_d(ifc.adcout_avg[6]),
			.adcout_avg_7_d(ifc.adcout_avg[7]),
			.adcout_avg_8_d(ifc.adcout_avg[8]),
			.adcout_avg_9_d(ifc.adcout_avg[9]),
			.adcout_avg_10_d(ifc.adcout_avg[10]),
			.adcout_avg_11_d(ifc.adcout_avg[11]),
			.adcout_avg_12_d(ifc.adcout_avg[12]),
			.adcout_avg_13_d(ifc.adcout_avg[13]),
			.adcout_avg_14_d(ifc.adcout_avg[14]),
			.adcout_avg_15_d(ifc.adcout_avg[15])
			);
//Register Bank 8:
//;my $regfile8_on_sysclk = generate('reg_file', 'regfile8_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0x900,
//;			RegList =>[
//;					{Name => 'adcout_sum_0', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_1', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_2', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_3', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_4', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_5', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_6', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_7', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_8', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_9', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_10', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_11', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_12', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_13', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_14', Width=>24, IEO=>'i'},
//;					{Name => 'adcout_sum_15', Width=>24, IEO=>'i'}
//;				]
//;			);
`$regfile8_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf72rf8_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf82rf9_ifc->iname`.cfgOut),
			.adcout_sum_0_d(ifc.adcout_sum[0]),
			.adcout_sum_1_d(ifc.adcout_sum[1]),
			.adcout_sum_2_d(ifc.adcout_sum[2]),
			.adcout_sum_3_d(ifc.adcout_sum[3]),
			.adcout_sum_4_d(ifc.adcout_sum[4]),
			.adcout_sum_5_d(ifc.adcout_sum[5]),
			.adcout_sum_6_d(ifc.adcout_sum[6]),
			.adcout_sum_7_d(ifc.adcout_sum[7]),
			.adcout_sum_8_d(ifc.adcout_sum[8]),
			.adcout_sum_9_d(ifc.adcout_sum[9]),
			.adcout_sum_10_d(ifc.adcout_sum[10]),
			.adcout_sum_11_d(ifc.adcout_sum[11]),
			.adcout_sum_12_d(ifc.adcout_sum[12]),
			.adcout_sum_13_d(ifc.adcout_sum[13]),
			.adcout_sum_14_d(ifc.adcout_sum[14]),
			.adcout_sum_15_d(ifc.adcout_sum[15])
			);
//Register Bank 9:
//;my $regfile9_on_sysclk = generate('reg_file', 'regfile9_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0xa00,
//;			RegList =>[
//;					{Name => 'adcout_hist_center_0', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_1', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_2', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_3', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_4', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_5', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_6', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_7', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_8', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_9', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_10', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_11', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_12', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_13', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_14', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_center_15', Width=>16, IEO=>'i'}
//;				]
//;			);
`$regfile9_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf82rf9_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf92rf10_ifc->iname`.cfgOut),
			.adcout_hist_center_0_d(ifc.adcout_hist_center[0]),
			.adcout_hist_center_1_d(ifc.adcout_hist_center[1]),
			.adcout_hist_center_2_d(ifc.adcout_hist_center[2]),
			.adcout_hist_center_3_d(ifc.adcout_hist_center[3]),
			.adcout_hist_center_4_d(ifc.adcout_hist_center[4]),
			.adcout_hist_center_5_d(ifc.adcout_hist_center[5]),
			.adcout_hist_center_6_d(ifc.adcout_hist_center[6]),
			.adcout_hist_center_7_d(ifc.adcout_hist_center[7]),
			.adcout_hist_center_8_d(ifc.adcout_hist_center[8]),
			.adcout_hist_center_9_d(ifc.adcout_hist_center[9]),
			.adcout_hist_center_10_d(ifc.adcout_hist_center[10]),
			.adcout_hist_center_11_d(ifc.adcout_hist_center[11]),
			.adcout_hist_center_12_d(ifc.adcout_hist_center[12]),
			.adcout_hist_center_13_d(ifc.adcout_hist_center[13]),
			.adcout_hist_center_14_d(ifc.adcout_hist_center[14]),
			.adcout_hist_center_15_d(ifc.adcout_hist_center[15])
			);
//Register Bank 10:
//;my $regfile10_on_sysclk = generate('reg_file', 'regfile10_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0xb00,
//;			RegList =>[
//;					{Name => 'adcout_hist_side_0', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_1', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_2', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_3', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_4', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_5', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_6', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_7', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_8', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_9', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_10', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_11', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_12', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_13', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_14', Width=>16, IEO=>'i'},
//;					{Name => 'adcout_hist_side_15', Width=>16, IEO=>'i'}
//;				]
//;			);
`$regfile10_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf92rf10_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf102rf11_ifc->iname`.cfgOut),
			.adcout_hist_side_0_d(ifc.adcout_hist_side[0]),
			.adcout_hist_side_1_d(ifc.adcout_hist_side[1]),
			.adcout_hist_side_2_d(ifc.adcout_hist_side[2]),
			.adcout_hist_side_3_d(ifc.adcout_hist_side[3]),
			.adcout_hist_side_4_d(ifc.adcout_hist_side[4]),
			.adcout_hist_side_5_d(ifc.adcout_hist_side[5]),
			.adcout_hist_side_6_d(ifc.adcout_hist_side[6]),
			.adcout_hist_side_7_d(ifc.adcout_hist_side[7]),
			.adcout_hist_side_8_d(ifc.adcout_hist_side[8]),
			.adcout_hist_side_9_d(ifc.adcout_hist_side[9]),
			.adcout_hist_side_10_d(ifc.adcout_hist_side[10]),
			.adcout_hist_side_11_d(ifc.adcout_hist_side[11]),
			.adcout_hist_side_12_d(ifc.adcout_hist_side[12]),
			.adcout_hist_side_13_d(ifc.adcout_hist_side[13]),
			.adcout_hist_side_14_d(ifc.adcout_hist_side[14]),
			.adcout_hist_side_15_d(ifc.adcout_hist_side[15])
			);
//Register Bank 11:
//;my $regfile11_on_sysclk = generate('reg_file', 'regfile11_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0xc00,
//;			RegList =>[
//;					{Name => 'adcout_pfd_offset_0', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_1', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_2', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_3', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_4', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_5', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_6', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_7', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_8', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_9', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_10', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_11', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_12', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_13', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_14', Width=>8, IEO=>'i'},
//;					{Name => 'adcout_pfd_offset_15', Width=>8, IEO=>'i'}
//;				]
//;			);
`$regfile11_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf102rf11_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf112rf12_ifc->iname`.cfgOut),
			.adcout_pfd_offset_0_d(ifc.adcout_pfd_offset[0]),
			.adcout_pfd_offset_1_d(ifc.adcout_pfd_offset[1]),
			.adcout_pfd_offset_2_d(ifc.adcout_pfd_offset[2]),
			.adcout_pfd_offset_3_d(ifc.adcout_pfd_offset[3]),
			.adcout_pfd_offset_4_d(ifc.adcout_pfd_offset[4]),
			.adcout_pfd_offset_5_d(ifc.adcout_pfd_offset[5]),
			.adcout_pfd_offset_6_d(ifc.adcout_pfd_offset[6]),
			.adcout_pfd_offset_7_d(ifc.adcout_pfd_offset[7]),
			.adcout_pfd_offset_8_d(ifc.adcout_pfd_offset[8]),
			.adcout_pfd_offset_9_d(ifc.adcout_pfd_offset[9]),
			.adcout_pfd_offset_10_d(ifc.adcout_pfd_offset[10]),
			.adcout_pfd_offset_11_d(ifc.adcout_pfd_offset[11]),
			.adcout_pfd_offset_12_d(ifc.adcout_pfd_offset[12]),
			.adcout_pfd_offset_13_d(ifc.adcout_pfd_offset[13]),
			.adcout_pfd_offset_14_d(ifc.adcout_pfd_offset[14]),
			.adcout_pfd_offset_15_d(ifc.adcout_pfd_offset[15])
			);
//Register Bank 12:
//;my $regfile12_on_sysclk = generate('reg_file', 'regfile12_on_sysclk',
//;			CfgBusPtr => $sc_jtag2rf0_ifc,
//;			CfgOpcodes => $sc_cfg_ops,
//;			BaseAddr => 0xd00,
//;			RegList =>[
//;					{Name => 'out_data_0', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_1', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_2', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_3', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_4', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_5', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_6', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_7', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_8', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_9', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_10', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_11', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_12', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_13', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_14', Width=>8, IEO=>'i'},
//;					{Name => 'out_data_15', Width=>8, IEO=>'i'}
//;				]
//;			);
`$regfile12_on_sysclk->instantiate` (.Clk(ifc.Clk),
			.Reset(ifc.Reset),
			.cfgIn(`$sc_rf112rf12_ifc->iname`.cfgIn),
			.cfgOut(`$sc_rf122jtag_ifc->iname`.cfgOut),
			.out_data_0_d(ifc.out_data[0]),
			.out_data_1_d(ifc.out_data[1]),
			.out_data_2_d(ifc.out_data[2]),
			.out_data_3_d(ifc.out_data[3]),
			.out_data_4_d(ifc.out_data[4]),
			.out_data_5_d(ifc.out_data[5]),
			.out_data_6_d(ifc.out_data[6]),
			.out_data_7_d(ifc.out_data[7]),
			.out_data_8_d(ifc.out_data[8]),
			.out_data_9_d(ifc.out_data[9]),
			.out_data_10_d(ifc.out_data[10]),
			.out_data_11_d(ifc.out_data[11]),
			.out_data_12_d(ifc.out_data[12]),
			.out_data_13_d(ifc.out_data[13]),
			.out_data_14_d(ifc.out_data[14]),
			.out_data_15_d(ifc.out_data[15])
			);


   // Instantiate a JTAG CLOCK domain reg-file
   // Note that signals D and E are IO's to the system. We'll also define signal F here.
   // for testing purposes well init this signal (non synthesizable!)
   //; my $tc_cfg_ops = $cfg_dbg->get_param('TC_CFG_OPCODES');




endmodule // `mname`

